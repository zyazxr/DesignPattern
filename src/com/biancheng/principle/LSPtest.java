package com.biancheng.principle;

/**
 * @author ：zhaoy
 * @date ：Created in 2021/3/12 9:21
 * @description：
 * @modified By：
 * @version: 1.0
 */

public class LSPtest {
	public static void main(String[] args) {
		Bird bird1 = new Swallow();
		Bird bird2 = new BrownKiwi();
		bird1.setSpeed(120);
		bird2.setSpeed(120);
		System.out.println("如果飞行300公里：");
		try {
			System.out.println("燕子将飞行" + bird1.getFlyTime(300) + "小时.");
			System.out.println("几维鸟将飞行" + bird2.getFlyTime(300) + "小时。");
		} catch (Exception err) {
			System.out.println("发生错误了!");
		}
	}
}

//鸟类
class Bird {
	double flySpeed;

	public void setSpeed(double speed) {
		flySpeed = speed;
	}

	public double getFlyTime(double distance) {
		return (distance / flySpeed);
	}
}

//燕子类
class Swallow extends Bird {
}

//几维鸟类
class BrownKiwi extends Bird {
	@Override
	public void setSpeed(double speed) {
		flySpeed = 0;
	}
}

//程序运行错误的原因是：几维鸟类重写了鸟类的 setSpeed(double speed) 方法，这违背了里氏替换原则。正确的做法是：
// 取消几维鸟原来的继承关系，定义鸟和几维鸟的更一般的父类，如动物类，它们都有奔跑的能力。几维鸟的飞行速度虽然为 0，但奔跑速度不为 0，可以计算出其奔跑 300 千米所要花费的时间